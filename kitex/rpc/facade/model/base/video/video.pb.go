// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v4.25.2
// source: video.proto

package video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	_ "work/rpc/facade/model/api"
	base "work/rpc/facade/model/base"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LatestTime string `protobuf:"bytes,1,opt,name=latest_time,json=latestTime,proto3" json:"latest_time,omitempty" query:"latest_time"`
}

func (x *VideoFeedRequest) Reset() {
	*x = VideoFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFeedRequest) ProtoMessage() {}

func (x *VideoFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFeedRequest.ProtoReflect.Descriptor instead.
func (*VideoFeedRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{0}
}

func (x *VideoFeedRequest) GetLatestTime() string {
	if x != nil {
		return x.LatestTime
	}
	return ""
}

type VideoFeedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status                             `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Data *VideoFeedResponse_VideoFeedResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" form:"data" query:"data"`
}

func (x *VideoFeedResponse) Reset() {
	*x = VideoFeedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFeedResponse) ProtoMessage() {}

func (x *VideoFeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFeedResponse.ProtoReflect.Descriptor instead.
func (*VideoFeedResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{1}
}

func (x *VideoFeedResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoFeedResponse) GetData() *VideoFeedResponse_VideoFeedResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VideoPublishStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken      string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken     string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
	Title            string `protobuf:"bytes,3,opt,name=title,proto3" query:"title" form:"title" json:"title" vd:"len($)>0; msg:'title can not be empty'"`
	Description      string `protobuf:"bytes,4,opt,name=description,proto3" form:"description" json:"description,omitempty"`
	ChunkTotalNumber int64  `protobuf:"varint,5,opt,name=chunk_total_number,json=chunkTotalNumber,proto3" query:"chunk_total_number" form:"chunk_total_number" json:"chunk_total_number" vd:"$>0; msg:'chunk number can not be lower than zero'"`
}

func (x *VideoPublishStartRequest) Reset() {
	*x = VideoPublishStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishStartRequest) ProtoMessage() {}

func (x *VideoPublishStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishStartRequest.ProtoReflect.Descriptor instead.
func (*VideoPublishStartRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{2}
}

func (x *VideoPublishStartRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoPublishStartRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VideoPublishStartRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoPublishStartRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoPublishStartRequest) GetChunkTotalNumber() int64 {
	if x != nil {
		return x.ChunkTotalNumber
	}
	return 0
}

type VideoPublishStartResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Uuid string       `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid,omitempty" form:"uuid" query:"uuid"`
}

func (x *VideoPublishStartResponse) Reset() {
	*x = VideoPublishStartResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishStartResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishStartResponse) ProtoMessage() {}

func (x *VideoPublishStartResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishStartResponse.ProtoReflect.Descriptor instead.
func (*VideoPublishStartResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{3}
}

func (x *VideoPublishStartResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoPublishStartResponse) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VideoPublishUploadingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
	Uuid         string `protobuf:"bytes,3,opt,name=uuid,proto3" query:"uuid" form:"uuid" json:"uuid,required"`
	Data         []byte `protobuf:"bytes,4,opt,name=data,proto3" query:"data" form:"data" json:"data"`
	Md5          string `protobuf:"bytes,5,opt,name=md5,proto3" query:"md5" form:"md5" json:"md5,required"`
	IsM3U8       bool   `protobuf:"varint,6,opt,name=is_m3u8,json=isM3u8,proto3" query:"is_m3u8" form:"is_m3u8" json:"is_m3u8,required"`
	Filename     string `protobuf:"bytes,7,opt,name=filename,proto3" query:"filename" form:"filename" json:"filename,required"`
	ChunkNumber  int64  `protobuf:"varint,8,opt,name=chunk_number,json=chunkNumber,proto3" query:"chunk_number" form:"chunk_number" json:"chunk_number,required"`
}

func (x *VideoPublishUploadingRequest) Reset() {
	*x = VideoPublishUploadingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishUploadingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishUploadingRequest) ProtoMessage() {}

func (x *VideoPublishUploadingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishUploadingRequest.ProtoReflect.Descriptor instead.
func (*VideoPublishUploadingRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{4}
}

func (x *VideoPublishUploadingRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoPublishUploadingRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VideoPublishUploadingRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *VideoPublishUploadingRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VideoPublishUploadingRequest) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

func (x *VideoPublishUploadingRequest) GetIsM3U8() bool {
	if x != nil {
		return x.IsM3U8
	}
	return false
}

func (x *VideoPublishUploadingRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *VideoPublishUploadingRequest) GetChunkNumber() int64 {
	if x != nil {
		return x.ChunkNumber
	}
	return 0
}

type VideoPublishUploadingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
}

func (x *VideoPublishUploadingResponse) Reset() {
	*x = VideoPublishUploadingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishUploadingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishUploadingResponse) ProtoMessage() {}

func (x *VideoPublishUploadingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishUploadingResponse.ProtoReflect.Descriptor instead.
func (*VideoPublishUploadingResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{5}
}

func (x *VideoPublishUploadingResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

type VideoPublishCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
	Uuid         string `protobuf:"bytes,3,opt,name=uuid,proto3" query:"uuid" form:"uuid" json:"uuid,required"`
}

func (x *VideoPublishCompleteRequest) Reset() {
	*x = VideoPublishCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishCompleteRequest) ProtoMessage() {}

func (x *VideoPublishCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishCompleteRequest.ProtoReflect.Descriptor instead.
func (*VideoPublishCompleteRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{6}
}

func (x *VideoPublishCompleteRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoPublishCompleteRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VideoPublishCompleteRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VideoPublishCompleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
}

func (x *VideoPublishCompleteResponse) Reset() {
	*x = VideoPublishCompleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishCompleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishCompleteResponse) ProtoMessage() {}

func (x *VideoPublishCompleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishCompleteResponse.ProtoReflect.Descriptor instead.
func (*VideoPublishCompleteResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{7}
}

func (x *VideoPublishCompleteResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

type VideoPublishCancleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
	Uuid         string `protobuf:"bytes,3,opt,name=uuid,proto3" query:"uuid" form:"uuid" json:"uuid,required"`
}

func (x *VideoPublishCancleRequest) Reset() {
	*x = VideoPublishCancleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishCancleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishCancleRequest) ProtoMessage() {}

func (x *VideoPublishCancleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishCancleRequest.ProtoReflect.Descriptor instead.
func (*VideoPublishCancleRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{8}
}

func (x *VideoPublishCancleRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoPublishCancleRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VideoPublishCancleRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type VideoPublishCancleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
}

func (x *VideoPublishCancleResponse) Reset() {
	*x = VideoPublishCancleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPublishCancleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPublishCancleResponse) ProtoMessage() {}

func (x *VideoPublishCancleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPublishCancleResponse.ProtoReflect.Descriptor instead.
func (*VideoPublishCancleResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{9}
}

func (x *VideoPublishCancleResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

type VideoListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" query:"user_id"`
	PageNum      int64  `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty" query:"page_num"`
	PageSize     int64  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" query:"page_size"`
	AccessToken  string `protobuf:"bytes,4,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,5,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
}

func (x *VideoListRequest) Reset() {
	*x = VideoListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoListRequest) ProtoMessage() {}

func (x *VideoListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoListRequest.ProtoReflect.Descriptor instead.
func (*VideoListRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{10}
}

func (x *VideoListRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoListRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *VideoListRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VideoListRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoListRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type VideoListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status                             `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Data *VideoListResponse_VideoListResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" form:"data" query:"data"`
}

func (x *VideoListResponse) Reset() {
	*x = VideoListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoListResponse) ProtoMessage() {}

func (x *VideoListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoListResponse.ProtoReflect.Descriptor instead.
func (*VideoListResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{11}
}

func (x *VideoListResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoListResponse) GetData() *VideoListResponse_VideoListResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VideoPopularRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageNum      int64  `protobuf:"varint,1,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty" query:"page_num"`
	PageSize     int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" query:"page_size"`
	AccessToken  string `protobuf:"bytes,3,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,4,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
}

func (x *VideoPopularRequest) Reset() {
	*x = VideoPopularRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPopularRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPopularRequest) ProtoMessage() {}

func (x *VideoPopularRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPopularRequest.ProtoReflect.Descriptor instead.
func (*VideoPopularRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{12}
}

func (x *VideoPopularRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *VideoPopularRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VideoPopularRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoPopularRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type VideoPopularResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status                                   `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Data *VideoPopularResponse_VideoPopularResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" form:"data" query:"data"`
}

func (x *VideoPopularResponse) Reset() {
	*x = VideoPopularResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPopularResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPopularResponse) ProtoMessage() {}

func (x *VideoPopularResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPopularResponse.ProtoReflect.Descriptor instead.
func (*VideoPopularResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{13}
}

func (x *VideoPopularResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoPopularResponse) GetData() *VideoPopularResponse_VideoPopularResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VideoSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty" header:"Access-Token"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty" header:"Refresh-Token"`
	Keywords     string `protobuf:"bytes,3,opt,name=keywords,proto3" query:"keywords" form:"keywords" json:"keywords"`
	PageNum      int64  `protobuf:"varint,4,opt,name=page_num,json=pageNum,proto3" query:"page_num" form:"page_num" json:"page_num,required"`
	PageSize     int64  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" query:"page_size" form:"page_size" json:"page_size,required"`
	FromDate     int64  `protobuf:"varint,6,opt,name=from_date,json=fromDate,proto3" form:"from_date" json:"from_date,omitempty"`
	ToDate       int64  `protobuf:"varint,7,opt,name=to_date,json=toDate,proto3" form:"to_date" json:"to_date,omitempty"`
	Username     string `protobuf:"bytes,8,opt,name=username,proto3" form:"username" json:"username,omitempty"`
}

func (x *VideoSearchRequest) Reset() {
	*x = VideoSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSearchRequest) ProtoMessage() {}

func (x *VideoSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSearchRequest.ProtoReflect.Descriptor instead.
func (*VideoSearchRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{14}
}

func (x *VideoSearchRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *VideoSearchRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

func (x *VideoSearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *VideoSearchRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *VideoSearchRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VideoSearchRequest) GetFromDate() int64 {
	if x != nil {
		return x.FromDate
	}
	return 0
}

func (x *VideoSearchRequest) GetToDate() int64 {
	if x != nil {
		return x.ToDate
	}
	return 0
}

func (x *VideoSearchRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type VideoSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status                                 `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Data *VideoSearchResponse_VideoSearchResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" form:"data" query:"data"`
}

func (x *VideoSearchResponse) Reset() {
	*x = VideoSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSearchResponse) ProtoMessage() {}

func (x *VideoSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSearchResponse.ProtoReflect.Descriptor instead.
func (*VideoSearchResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{15}
}

func (x *VideoSearchResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoSearchResponse) GetData() *VideoSearchResponse_VideoSearchResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

type VideoVisitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VideoVisitRequest) Reset() {
	*x = VideoVisitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoVisitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoVisitRequest) ProtoMessage() {}

func (x *VideoVisitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoVisitRequest.ProtoReflect.Descriptor instead.
func (*VideoVisitRequest) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{16}
}

type VideoVisitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *base.Status `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty" form:"base" query:"base"`
	Item *base.Video  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty" form:"item" query:"item"`
}

func (x *VideoVisitResponse) Reset() {
	*x = VideoVisitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoVisitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoVisitResponse) ProtoMessage() {}

func (x *VideoVisitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoVisitResponse.ProtoReflect.Descriptor instead.
func (*VideoVisitResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{17}
}

func (x *VideoVisitResponse) GetBase() *base.Status {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *VideoVisitResponse) GetItem() *base.Video {
	if x != nil {
		return x.Item
	}
	return nil
}

type VideoFeedResponse_VideoFeedResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*base.Video `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" form:"items" query:"items"`
}

func (x *VideoFeedResponse_VideoFeedResponseData) Reset() {
	*x = VideoFeedResponse_VideoFeedResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFeedResponse_VideoFeedResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFeedResponse_VideoFeedResponseData) ProtoMessage() {}

func (x *VideoFeedResponse_VideoFeedResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFeedResponse_VideoFeedResponseData.ProtoReflect.Descriptor instead.
func (*VideoFeedResponse_VideoFeedResponseData) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{1, 0}
}

func (x *VideoFeedResponse_VideoFeedResponseData) GetItems() []*base.Video {
	if x != nil {
		return x.Items
	}
	return nil
}

type VideoListResponse_VideoListResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*base.Video `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" form:"items" query:"items"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty" form:"total" query:"total"`
}

func (x *VideoListResponse_VideoListResponseData) Reset() {
	*x = VideoListResponse_VideoListResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoListResponse_VideoListResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoListResponse_VideoListResponseData) ProtoMessage() {}

func (x *VideoListResponse_VideoListResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoListResponse_VideoListResponseData.ProtoReflect.Descriptor instead.
func (*VideoListResponse_VideoListResponseData) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{11, 0}
}

func (x *VideoListResponse_VideoListResponseData) GetItems() []*base.Video {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *VideoListResponse_VideoListResponseData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type VideoPopularResponse_VideoPopularResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*base.Video `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" form:"items" query:"items"`
}

func (x *VideoPopularResponse_VideoPopularResponseData) Reset() {
	*x = VideoPopularResponse_VideoPopularResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPopularResponse_VideoPopularResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPopularResponse_VideoPopularResponseData) ProtoMessage() {}

func (x *VideoPopularResponse_VideoPopularResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPopularResponse_VideoPopularResponseData.ProtoReflect.Descriptor instead.
func (*VideoPopularResponse_VideoPopularResponseData) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{13, 0}
}

func (x *VideoPopularResponse_VideoPopularResponseData) GetItems() []*base.Video {
	if x != nil {
		return x.Items
	}
	return nil
}

type VideoSearchResponse_VideoSearchResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*base.Video `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty" form:"items" query:"items"`
	Total int64         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty" form:"total" query:"total"`
}

func (x *VideoSearchResponse_VideoSearchResponseData) Reset() {
	*x = VideoSearchResponse_VideoSearchResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoSearchResponse_VideoSearchResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoSearchResponse_VideoSearchResponseData) ProtoMessage() {}

func (x *VideoSearchResponse_VideoSearchResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoSearchResponse_VideoSearchResponseData.ProtoReflect.Descriptor instead.
func (*VideoSearchResponse_VideoSearchResponseData) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{15, 0}
}

func (x *VideoSearchResponse_VideoSearchResponseData) GetItems() []*base.Video {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *VideoSearchResponse_VideoSearchResponseData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_video_proto protoreflect.FileDescriptor

var file_video_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x44, 0x0a, 0x10, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0f, 0xb2, 0xbb, 0x18, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x65, 0x65, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x35, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x94, 0x03, 0x0a, 0x18, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x52, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3c, 0xca, 0xf3, 0x18, 0x38, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x20, 0x76, 0x64, 0x3a, 0x22, 0x6c,
	0x65, 0x6e, 0x28, 0x24, 0x29, 0x3e, 0x30, 0x3b, 0x20, 0x6d, 0x73, 0x67, 0x3a, 0x27, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x62, 0x65, 0x20, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x27, 0x22, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x31, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0f, 0xca, 0xbb, 0x18, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x83, 0x01, 0x0a, 0x12, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x55, 0xca,
	0xf3, 0x18, 0x51, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x20, 0x76, 0x64, 0x3a,
	0x22, 0x24, 0x3e, 0x30, 0x3b, 0x20, 0x6d, 0x73, 0x67, 0x3a, 0x27, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x20, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x63, 0x61, 0x6e, 0x20, 0x6e, 0x6f, 0x74, 0x20,
	0x62, 0x65, 0x20, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x20, 0x74, 0x68, 0x61, 0x6e, 0x20, 0x7a, 0x65,
	0x72, 0x6f, 0x27, 0x22, 0x52, 0x10, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x4c, 0x0a, 0x19, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0xbe, 0x03, 0x0a, 0x1c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xbb, 0x18,
	0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x2d, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x18, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x75, 0x69, 0x64,
	0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64,
	0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x42, 0x0f,
	0xca, 0xf3, 0x18, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x64, 0x61, 0x74, 0x61, 0x22, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x17, 0xca, 0xf3, 0x18, 0x13, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6d, 0x64,
	0x35, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x03, 0x6d, 0x64, 0x35,
	0x12, 0x34, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6d, 0x33, 0x75, 0x38, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x1b, 0xca, 0xf3, 0x18, 0x17, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x69, 0x73, 0x5f,
	0x6d, 0x33, 0x75, 0x38, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x06,
	0x69, 0x73, 0x4d, 0x33, 0x75, 0x38, 0x12, 0x38, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0xca, 0xf3, 0x18, 0x18, 0x6a, 0x73,
	0x6f, 0x6e, 0x3a, 0x22, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x72, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x43, 0x0a, 0x0c, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x20, 0xca, 0xf3, 0x18, 0x1c, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x22, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2c, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x0b, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x3c, 0x0a, 0x1d, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x2c, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18,
	0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x75, 0x75, 0x69, 0x64, 0x2c, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x3b,
	0x0a, 0x1c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b,
	0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22, 0xb6, 0x01, 0x0a, 0x19,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36,
	0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65,
	0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0xca, 0xf3, 0x18, 0x14, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22,
	0x75, 0x75, 0x69, 0x64, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x1a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x22,
	0xfa, 0x01, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xb2, 0xbb, 0x18, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xb2, 0xbb,
	0x18, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x33, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18,
	0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc1, 0x01, 0x0a,
	0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x42, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x4b, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x22, 0xd7, 0x01, 0x0a, 0x13, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0c, 0xb2, 0xbb, 0x18, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75,
	0x6d, 0x12, 0x2a, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x0d, 0xb2, 0xbb, 0x18, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x33, 0x0a,
	0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xb7, 0x01, 0x0a, 0x14, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x48, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75,
	0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x18, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xa3, 0x03, 0x0a, 0x12, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x10, 0xba, 0xbb, 0x18, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x2d, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x36, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0xba, 0xbb, 0x18, 0x0d, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x2d, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2f, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0xca, 0xf3, 0x18, 0x0f,
	0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x22, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1c, 0xca, 0xf3, 0x18,
	0x18, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x22, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x2c,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x75, 0x6d, 0x12, 0x3a, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x1d, 0xca, 0xf3, 0x18, 0x19, 0x6a, 0x73, 0x6f, 0x6e, 0x3a,
	0x22, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x2c, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x64, 0x22, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a,
	0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x42, 0x0d, 0xca, 0xbb, 0x18, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x07, 0x74, 0x6f,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x42, 0x0b, 0xca, 0xbb, 0x18,
	0x07, 0x74, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x52, 0x06, 0x74, 0x6f, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0c, 0xca, 0xbb, 0x18, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc9, 0x01, 0x0a, 0x13, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x46, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x4d, 0x0a, 0x17, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x06, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x13, 0x0a, 0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x12, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x1a,
	0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x32, 0xac, 0x07, 0x0a, 0x0c, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x09, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x46, 0x65, 0x65, 0x64, 0x12, 0x17, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0xca, 0xc1, 0x18,
	0x0c, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x66, 0x65, 0x65, 0x64, 0x2f, 0x12, 0x70, 0x0a,
	0x11, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x12, 0x1f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0xd2, 0xc1, 0x18, 0x14, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12,
	0x80, 0x01, 0x0a, 0x15, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0xd2, 0xc1, 0x18, 0x18, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x7c, 0x0a, 0x14, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1b, 0xd2, 0xc1, 0x18, 0x17, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x74, 0x0a, 0x12, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x43, 0x61, 0x6e, 0x63, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x6e, 0x63, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x43, 0x61, 0x6e,
	0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0xd2, 0xc1, 0x18,
	0x15, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x2f,
	0x63, 0x61, 0x6e, 0x63, 0x6c, 0x65, 0x12, 0x50, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x10, 0xca, 0xc1, 0x18, 0x0c, 0x2f, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x12, 0x5c, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x6f, 0x70, 0x75, 0x6c, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x13, 0xca, 0xc1, 0x18, 0x0f, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x6f,
	0x70, 0x75, 0x6c, 0x61, 0x72, 0x2f, 0x12, 0x58, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0xd2, 0xc1,
	0x18, 0x0e, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2f,
	0x12, 0x57, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x12, 0x18,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x56, 0x69, 0x73, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0xca, 0xc1, 0x18, 0x10, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f,
	0x76, 0x69, 0x73, 0x69, 0x74, 0x2f, 0x3a, 0x69, 0x64, 0x42, 0x1b, 0x5a, 0x19, 0x77, 0x6f, 0x72,
	0x6b, 0x2f, 0x62, 0x69, 0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_proto_rawDescOnce sync.Once
	file_video_proto_rawDescData = file_video_proto_rawDesc
)

func file_video_proto_rawDescGZIP() []byte {
	file_video_proto_rawDescOnce.Do(func() {
		file_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_proto_rawDescData)
	})
	return file_video_proto_rawDescData
}

var file_video_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_video_proto_goTypes = []interface{}{
	(*VideoFeedRequest)(nil),                              // 0: video.VideoFeedRequest
	(*VideoFeedResponse)(nil),                             // 1: video.VideoFeedResponse
	(*VideoPublishStartRequest)(nil),                      // 2: video.VideoPublishStartRequest
	(*VideoPublishStartResponse)(nil),                     // 3: video.VideoPublishStartResponse
	(*VideoPublishUploadingRequest)(nil),                  // 4: video.VideoPublishUploadingRequest
	(*VideoPublishUploadingResponse)(nil),                 // 5: video.VideoPublishUploadingResponse
	(*VideoPublishCompleteRequest)(nil),                   // 6: video.VideoPublishCompleteRequest
	(*VideoPublishCompleteResponse)(nil),                  // 7: video.VideoPublishCompleteResponse
	(*VideoPublishCancleRequest)(nil),                     // 8: video.VideoPublishCancleRequest
	(*VideoPublishCancleResponse)(nil),                    // 9: video.VideoPublishCancleResponse
	(*VideoListRequest)(nil),                              // 10: video.VideoListRequest
	(*VideoListResponse)(nil),                             // 11: video.VideoListResponse
	(*VideoPopularRequest)(nil),                           // 12: video.VideoPopularRequest
	(*VideoPopularResponse)(nil),                          // 13: video.VideoPopularResponse
	(*VideoSearchRequest)(nil),                            // 14: video.VideoSearchRequest
	(*VideoSearchResponse)(nil),                           // 15: video.VideoSearchResponse
	(*VideoVisitRequest)(nil),                             // 16: video.VideoVisitRequest
	(*VideoVisitResponse)(nil),                            // 17: video.VideoVisitResponse
	(*VideoFeedResponse_VideoFeedResponseData)(nil),       // 18: video.VideoFeedResponse.VideoFeedResponseData
	(*VideoListResponse_VideoListResponseData)(nil),       // 19: video.VideoListResponse.VideoListResponseData
	(*VideoPopularResponse_VideoPopularResponseData)(nil), // 20: video.VideoPopularResponse.VideoPopularResponseData
	(*VideoSearchResponse_VideoSearchResponseData)(nil),   // 21: video.VideoSearchResponse.VideoSearchResponseData
	(*base.Status)(nil),                                   // 22: Status
	(*base.Video)(nil),                                    // 23: Video
}
var file_video_proto_depIdxs = []int32{
	22, // 0: video.VideoFeedResponse.base:type_name -> Status
	18, // 1: video.VideoFeedResponse.data:type_name -> video.VideoFeedResponse.VideoFeedResponseData
	22, // 2: video.VideoPublishStartResponse.base:type_name -> Status
	22, // 3: video.VideoPublishUploadingResponse.base:type_name -> Status
	22, // 4: video.VideoPublishCompleteResponse.base:type_name -> Status
	22, // 5: video.VideoPublishCancleResponse.base:type_name -> Status
	22, // 6: video.VideoListResponse.base:type_name -> Status
	19, // 7: video.VideoListResponse.data:type_name -> video.VideoListResponse.VideoListResponseData
	22, // 8: video.VideoPopularResponse.base:type_name -> Status
	20, // 9: video.VideoPopularResponse.data:type_name -> video.VideoPopularResponse.VideoPopularResponseData
	22, // 10: video.VideoSearchResponse.base:type_name -> Status
	21, // 11: video.VideoSearchResponse.data:type_name -> video.VideoSearchResponse.VideoSearchResponseData
	22, // 12: video.VideoVisitResponse.base:type_name -> Status
	23, // 13: video.VideoVisitResponse.item:type_name -> Video
	23, // 14: video.VideoFeedResponse.VideoFeedResponseData.items:type_name -> Video
	23, // 15: video.VideoListResponse.VideoListResponseData.items:type_name -> Video
	23, // 16: video.VideoPopularResponse.VideoPopularResponseData.items:type_name -> Video
	23, // 17: video.VideoSearchResponse.VideoSearchResponseData.items:type_name -> Video
	0,  // 18: video.VideoHandler.VideoFeed:input_type -> video.VideoFeedRequest
	2,  // 19: video.VideoHandler.VideoPublishStart:input_type -> video.VideoPublishStartRequest
	4,  // 20: video.VideoHandler.VideoPublishUploading:input_type -> video.VideoPublishUploadingRequest
	6,  // 21: video.VideoHandler.VideoPublishComplete:input_type -> video.VideoPublishCompleteRequest
	8,  // 22: video.VideoHandler.VideoPublishCancle:input_type -> video.VideoPublishCancleRequest
	10, // 23: video.VideoHandler.VideoList:input_type -> video.VideoListRequest
	12, // 24: video.VideoHandler.VideoPopular:input_type -> video.VideoPopularRequest
	14, // 25: video.VideoHandler.VideoSearch:input_type -> video.VideoSearchRequest
	16, // 26: video.VideoHandler.VideoVisit:input_type -> video.VideoVisitRequest
	1,  // 27: video.VideoHandler.VideoFeed:output_type -> video.VideoFeedResponse
	3,  // 28: video.VideoHandler.VideoPublishStart:output_type -> video.VideoPublishStartResponse
	5,  // 29: video.VideoHandler.VideoPublishUploading:output_type -> video.VideoPublishUploadingResponse
	7,  // 30: video.VideoHandler.VideoPublishComplete:output_type -> video.VideoPublishCompleteResponse
	9,  // 31: video.VideoHandler.VideoPublishCancle:output_type -> video.VideoPublishCancleResponse
	11, // 32: video.VideoHandler.VideoList:output_type -> video.VideoListResponse
	13, // 33: video.VideoHandler.VideoPopular:output_type -> video.VideoPopularResponse
	15, // 34: video.VideoHandler.VideoSearch:output_type -> video.VideoSearchResponse
	17, // 35: video.VideoHandler.VideoVisit:output_type -> video.VideoVisitResponse
	27, // [27:36] is the sub-list for method output_type
	18, // [18:27] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_video_proto_init() }
func file_video_proto_init() {
	if File_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFeedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishStartResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishUploadingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishUploadingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishCompleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishCancleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPublishCancleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPopularRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPopularResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoVisitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoVisitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFeedResponse_VideoFeedResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoListResponse_VideoListResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPopularResponse_VideoPopularResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoSearchResponse_VideoSearchResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_proto_goTypes,
		DependencyIndexes: file_video_proto_depIdxs,
		MessageInfos:      file_video_proto_msgTypes,
	}.Build()
	File_video_proto = out.File
	file_video_proto_rawDesc = nil
	file_video_proto_goTypes = nil
	file_video_proto_depIdxs = nil
}
